<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>伊成个人站-热衷于技术分享，源码分享的个人网站</title>
  
  <subtitle>伊成个人站</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.devcheng.net/"/>
  <updated>2023-10-16T13:30:26.001Z</updated>
  <id>http://www.devcheng.net/</id>
  
  <author>
    <name>伊成</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Springboot项目接口报415错误怎么解决</title>
    <link href="http://www.devcheng.net/post/5cfb0439.html"/>
    <id>http://www.devcheng.net/post/5cfb0439.html</id>
    <published>2023-10-16T13:28:36.000Z</published>
    <updated>2023-10-16T13:30:26.001Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>接口明明用postman测试的好好怎么给前端联调的时候就提示415错误了呢?<br><img src="https://s3.bmp.ovh/imgs/2023/10/09/68ebee904cba21c4.png" alt=""></p><h1 id="寻找原因"><a href="#寻找原因" class="headerlink" title="寻找原因"></a>寻找原因</h1><p>回过头看后端接口代码是如何写的，代码简要如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public Mono&lt;ResultJson&gt; editAttr(@RequestBody DeviceChannelEntity entity) &#123;</span><br><span class="line">     return ResultJson.ok(deviceChannelService.edit(entity));</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>后端接口使用了@RequestBody注解，则说明接受的参数必须是json类型的。</p><p>如果前端没有指定响应的数据类型，默认会为text文本类型数据，从而会导致报错 415。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>在前端调用对接接口响应标头中添加json类型即可，具体如下：<br><img src="https://s3.bmp.ovh/imgs/2023/10/09/b963c42cb6f27e5f.png" alt=""></p><hr><p>The end.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;接口明明用postman测试的好好怎么给前端联调的时候就提示415错误了呢?&lt;br&gt;&lt;img src=&quot;https://s3
      
    
    </summary>
    
      <category term="blogshare" scheme="http://www.devcheng.net/categories/blogshare/"/>
    
    
      <category term="Springboot" scheme="http://www.devcheng.net/tags/Springboot/"/>
    
      <category term="415" scheme="http://www.devcheng.net/tags/415/"/>
    
  </entry>
  
  <entry>
    <title>基于SpringBoot开发的医疗管理系统源码分享</title>
    <link href="http://www.devcheng.net/post/67d8f3a4.html"/>
    <id>http://www.devcheng.net/post/67d8f3a4.html</id>
    <published>2023-09-15T11:40:03.000Z</published>
    <updated>2023-09-15T11:45:54.592Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>本项目是基于Spring Boot 2.x 开发的医疗管理系统系统。本项目也可以当作毕业设计，期末课程作业等，也可以当作学习、进阶Spring Boot 的资料。</p><h1 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h1><p>本项目主要包含以下功能模块</p><ul><li>系统管理</li><li>医生管理</li><li>患者管理</li><li>药品管理</li><li>管理员管理</li><li>预约管理</li><li>病史管理</li><li>住院信息管理</li><li>登录/注销功能</li><li>…</li></ul><h1 id="开发环境（运行环境）"><a href="#开发环境（运行环境）" class="headerlink" title="开发环境（运行环境）"></a>开发环境（运行环境）</h1><ul><li>系统环境：Windows 11</li><li>开发工具：IntelliJ IDEA 2023.1.2</li><li>Java版本：JDK 1.8</li><li>Mysql版本：8.0</li><li>Maven版本：3.6.3</li></ul><h1 id="项目技术栈"><a href="#项目技术栈" class="headerlink" title="项目技术栈"></a>项目技术栈</h1><ul><li>Spring Boot 2.1.4.RELEASE</li><li>Mybatis</li><li>Maven 3.X</li><li>Mysql</li><li>layui</li><li>Jquery</li><li>freemarker</li><li>…</li></ul><h1 id="登录地址"><a href="#登录地址" class="headerlink" title="登录地址"></a>登录地址</h1><p>项目访问路径：<a href="http://localhost:8088" target="_blank" rel="noopener">http://localhost:8088</a></p><p>管理员 用户名 / 密码</p><p>admin1/ 123456</p><h1 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h1><p><img src="https://s3.bmp.ovh/imgs/2023/09/15/f4a69961f2bf268c.png" alt="登录页面"></p><p><img src="https://s3.bmp.ovh/imgs/2023/09/15/031f98697024e87f.png" alt="index页面"></p><p><img src="https://s3.bmp.ovh/imgs/2023/09/15/60bf6866e9a9f311.png" alt="dr页面"></p><p><img src="https://s3.bmp.ovh/imgs/2023/09/15/0de5e0df9d041d47.png" alt="住院"></p><p><img src="https://s3.bmp.ovh/imgs/2023/09/15/4e54e21d478f11d5.png" alt="管理员"></p><p><img src="https://s3.bmp.ovh/imgs/2023/09/15/3ba030cb6535b527.png" alt="预约"></p><h1 id="项目演示视频"><a href="#项目演示视频" class="headerlink" title="项目演示视频"></a>项目演示视频</h1><p>链接: <a href="https://pan.baidu.com/s/1w0wkTAupDs4_qi0Wn3zRag" target="_blank" rel="noopener">https://pan.baidu.com/s/1w0wkTAupDs4_qi0Wn3zRag</a></p><p>提取码: mhib</p><h1 id="联系我们"><a href="#联系我们" class="headerlink" title="联系我们"></a>联系我们</h1><p>如有需要源码可以通过QQ 搜索：792435323联系我！ 请备注：医疗管理系统</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>获取代码之后，使用IDEA导入本项目前，请确保你本地环境是已经含有代码所需要运行环境的条件了。</p><p>接着找到对应的sql文件，将其导入到你本地的数据库即可。</p><p>最后修改项目中配置文件中的数据库对应的信息，确认修改完毕，找到对应的Application直接运行吧！</p><h1 id="其它说明"><a href="#其它说明" class="headerlink" title="其它说明"></a>其它说明</h1><p>白嫖怪，伸手党 请绕道！！！</p><hr><p>The end.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;本项目是基于Spring Boot 2.x 开发的医疗管理系统系统。本项目也可以当作毕业设计，期末课程作业等，也可以当作学习
      
    
    </summary>
    
      <category term="codeshare" scheme="http://www.devcheng.net/categories/codeshare/"/>
    
    
      <category term="医疗管理系统" scheme="http://www.devcheng.net/tags/%E5%8C%BB%E7%96%97%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="医院管理后台系统" scheme="http://www.devcheng.net/tags/%E5%8C%BB%E9%99%A2%E7%AE%A1%E7%90%86%E5%90%8E%E5%8F%B0%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>MySQL定时删除XX天数据</title>
    <link href="http://www.devcheng.net/post/10229ee8.html"/>
    <id>http://www.devcheng.net/post/10229ee8.html</id>
    <published>2023-08-16T12:10:11.000Z</published>
    <updated>2023-08-16T12:16:29.846Z</updated>
    
    <content type="html"><![CDATA[<h1 id="x20-写在前面"><a href="#x20-写在前面" class="headerlink" title="&#x20;写在前面"></a>&#x20;写在前面</h1><p>定时删除数据方式有多种方法，在实际工作中很多人可能会通过编码实现，也有人可能会通过脚本定时执行SQL进行定时删除对应数据。</p><p>今天使用MySQL自带的删除策略。</p><h2 id="MYSQL删除策略"><a href="#MYSQL删除策略" class="headerlink" title="MYSQL删除策略"></a>MYSQL删除策略</h2><p>从MySQL5.1.6起，增加了一个非常有特色的功能–事件调度器(Event Scheduler)，可以用做定时执行某些特定任务（例如：删除记录、对数据进行汇总等等），来取代原先只能由操作系统的计划任务来执行的工作。</p><p>更值得一提的是MySQL的事件调度器可以精确到每秒钟执行一个任务，而操作系统的计划任务只能精确到每分钟执行一次。对于一些对数据实时性要求比较高的应用（例如：股票、赔率、比分等）就非常适合。</p><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>1、开启事件调度器，确认是否开启</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">'event_scheduler'</span>;</span><br></pre></td></tr></table></figure><p>如果看到的结果是 OFF&#x20;</p><p>则代表没有开启事件调度器，需要执行下面的命令进行开启。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 开启命令</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> event_scheduler = <span class="keyword">ON</span>;</span><br></pre></td></tr></table></figure><p>2.创建事件  例如定时删除三个月前的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">event</span> delete_old_data</span><br><span class="line"><span class="keyword">on</span> schedule every <span class="number">1</span> <span class="keyword">day</span> starts <span class="string">'2023-01-1 23:35:00'</span></span><br><span class="line"><span class="keyword">do</span> <span class="keyword">delete</span> <span class="keyword">from</span> tb_processinfo</span><br><span class="line"><span class="keyword">where</span> Datatime &lt; <span class="keyword">DATE_SUB</span>(<span class="keyword">NOW</span>(),<span class="built_in">INTERVAL</span> <span class="number">3</span> <span class="keyword">MONTH</span>)</span><br></pre></td></tr></table></figure><p>就这样使用MySQL定时删除任务就做好了。</p><p>为了查看对应事件执行情况以及手动开启、关闭、删除事件还得需要了解一下几个命令。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看事件</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">events</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 关闭事件</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">event</span> event_name <span class="keyword">disable</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开启事件</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">event</span> event_name <span class="keyword">enable</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除事件</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">event</span> <span class="keyword">if</span> <span class="keyword">exists</span> event_name;</span><br></pre></td></tr></table></figure><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>通过使用MySQL的事件调度器，我们可以方便地创建定时任务来定期清理数据库中的过期数据。本文介绍了如何创建定时任务以及如何删除3个月前的数据作为示例。</p><p>请根据实际需求进行相应的调整和扩展。定时任务是数据库管理的重要组成部分，合理使用定时任务可以有效提高数据库性能和管理效率。</p><p><strong>tips：为了保证数据的安全性，请在操作前进行备份，并谨慎执行删除操作。</strong></p><hr><p>The end.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;x20-写在前面&quot;&gt;&lt;a href=&quot;#x20-写在前面&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x20;写在前面&quot;&gt;&lt;/a&gt;&amp;#x20;写在前面&lt;/h1&gt;&lt;p&gt;定时删除数据方式有多种方法，在实际工作中很多人可能会通过编码实现，也有人可能会通过脚
      
    
    </summary>
    
      <category term="blogshare" scheme="http://www.devcheng.net/categories/blogshare/"/>
    
    
      <category term="Mysql" scheme="http://www.devcheng.net/tags/Mysql/"/>
    
      <category term="定时任务" scheme="http://www.devcheng.net/tags/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>RedisDesktopManager新版本不再支持SSH连接远程redis后</title>
    <link href="http://www.devcheng.net/post/9b0031e7.html"/>
    <id>http://www.devcheng.net/post/9b0031e7.html</id>
    <published>2023-08-04T13:00:18.000Z</published>
    <updated>2023-08-16T12:11:08.969Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>RedisDesktopManager(又名RDM)是一个用于Windows、Linux和MacOS的快速开源Redis数据库管理应用程序。这几天从新下载RedisDesktopManager最新版本，结果发现新版本开始不支持SSH连接远程redis了。</p><p><img src="https://s3.bmp.ovh/imgs/2023/08/03/350037d40a85d874.png" alt="伊成博客"></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><p>根据网上有效的信息，可以回退版本到 0.9.3.817</p><p><img src="https://s3.bmp.ovh/imgs/2023/08/03/47f57f05178c24f0.png" alt="伊成博客"></p><p>从这个版本后就不支持SSH连接了。</p><h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><p>换一个客户端连接工具，我的基友推荐了一款 AnotherRedisDesktopManager，下载地址：<a href="https://github.com/qishibo/AnotherRedisDesktopManager" target="_blank" rel="noopener">https://github.com/qishibo/AnotherRedisDesktopManager</a></p><p>这里我下载的（目前）最新版 1.6.1</p><p><img src="https://s3.bmp.ovh/imgs/2023/08/03/bfaf7fb3e91e2ca3.png" alt="伊成博客"></p><p>个人感觉这个工具从UI界面以及功能都比较好用，如果正好你也需要SSH连接远程redis又不想那么折腾，这款工具或许值得你试试。</p><hr><p>The end.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;RedisDesktopManager(又名RDM)是一个用于Windows、Linux和MacOS的快速开源Redis数据库管理应用程序。
      
    
    </summary>
    
      <category term="blogshare" scheme="http://www.devcheng.net/categories/blogshare/"/>
    
    
      <category term="RedisDesktopManager" scheme="http://www.devcheng.net/tags/RedisDesktopManager/"/>
    
      <category term="AnotherRedisDesktopManager" scheme="http://www.devcheng.net/tags/AnotherRedisDesktopManager/"/>
    
  </entry>
  
  <entry>
    <title>springboot整合rabbitmq实现几种模式</title>
    <link href="http://www.devcheng.net/post/213457b6.html"/>
    <id>http://www.devcheng.net/post/213457b6.html</id>
    <published>2023-07-22T04:55:05.000Z</published>
    <updated>2023-07-22T04:57:48.870Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>如何使用springboot整合rabbitmq的几种模式，这篇就给出了对应的demo，地址放在文章后面。</p><p>前提条件需要搭建好对应的rabbitmq服务，具体搭建可以参考我的上一篇 <a href="http://www.devcheng.net/post/a3a60b55.html">《centos7中安装rabbitmq》</a>。</p><h2 id="7种模式"><a href="#7种模式" class="headerlink" title="7种模式"></a>7种模式</h2><p><img src="https://s3.bmp.ovh/imgs/2023/07/19/3344f6d7f1a87687.png" alt=""></p><h5 id="1-简单模式"><a href="#1-简单模式" class="headerlink" title="1.简单模式"></a>1.简单模式</h5><p><img src="https://s3.bmp.ovh/imgs/2023/07/12/4241da63b7b23ea0.png" alt=""></p><p>一个生产者，一个消费者，一个队列。</p><p>对应代码，请查看下列几个类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SimpleQueueConfig.java</span><br><span class="line">SimpleQueueProducer.java</span><br><span class="line">SimpleQueueConsumer.java</span><br></pre></td></tr></table></figure></p><h5 id="2-工作模式"><a href="#2-工作模式" class="headerlink" title="2.工作模式"></a>2.工作模式</h5><p><img src="https://s3.bmp.ovh/imgs/2023/07/13/58c10a5f770eec18.png" alt=""></p><p>一个生产者，多个消费者，每个消费者获取到的消息唯一，平均消费。</p><p>消息确认: 分两种自动确认 (易丢失数据)和手动确认 (不易丢失数据)</p><p>手动确认: 我们通过autoAck = true 标志明确地将它们关闭。一旦我们完成任务，就应该将此标志设置为false并从工作人员发送适当的确认。若忘记返回确认会造成消息无法释放，内存堆积。</p><p>消息持久性: 分消息持久化与消息非持久化</p><p>消息持久化: 数据写入磁盘，数据不易丢失(队列和消息都标记为持久)</p><p>消息非持久化: 数据写入内存，数据存储速度快</p><p>对应代码，请查看下列几个类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WorkQueueConfig.java</span><br><span class="line">WorkQueueProducer.java</span><br><span class="line">WorkQueueConsumer1.java</span><br><span class="line">WorkQueueConsumer2.java</span><br></pre></td></tr></table></figure></p><h5 id="3-发布订阅模式"><a href="#3-发布订阅模式" class="headerlink" title="3.发布订阅模式"></a>3.发布订阅模式</h5><p><img src="https://s3.bmp.ovh/imgs/2023/07/12/f33feff3ec43b937.png" alt=""></p><p>相比于上面两种模式多了一个交换机角色。</p><p>Exchange有常见以下3种类型：</p><p>Fanout：广播，将消息交给所有绑定到交换机的队列。</p><p>Direct：定向，把消息交给符合指定routing key 的队列。</p><p>Topic：通配符，把消息交给符合routing pattern（路由模式） 的队列。</p><p>！注意：Exchange（交换机）只负责转发消息，不具备存储消息的能力，因此如果没有任何队列与Exchange绑定，或者没有符合路由规则的队列，那么消息会丢失！</p><p>对应代码，请查看下列几个类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PublishSubscribeConfig.java</span><br><span class="line">PublishSubscribeProducer.java</span><br><span class="line">PublishSubscribeConsumer1.java</span><br><span class="line">PublishSubscribeConsumer2.java</span><br></pre></td></tr></table></figure></p><h5 id="4-路由模式"><a href="#4-路由模式" class="headerlink" title="4.路由模式"></a>4.路由模式</h5><p><img src="https://s3.bmp.ovh/imgs/2023/07/13/0a739ac21728b7d5.png" alt=""></p><p>交换机类型: direct</p><p>直接交换背后的路由算法很简单 - 消息进入队列，其 绑定密与消息的路由密完全匹配。</p><p>对应代码，请查看下列几个类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">RoutingQueueConfig.java</span><br><span class="line">RoutingQueueProducer.java</span><br><span class="line">RoutingQueueConsumer1.java</span><br><span class="line">RoutingQueueConsumer2.java</span><br></pre></td></tr></table></figure></p><h5 id="5-主题模式"><a href="#5-主题模式" class="headerlink" title="5.主题模式"></a>5.主题模式</h5><p><img src="https://s3.bmp.ovh/imgs/2023/07/13/5dea6f7002d3d0cc.png" alt=""></p><p>交换机类型：topic</p><p>发送到主题交换的消息不能具有任意 routing_key 它必须是由点分隔的单词列表。</p><p>单词可以是任何内容，但通常它们指定与消息相关的一些功能。</p><p>路由密钥中可以包含任意数量的单词，最多可达255个字节。</p><p>绑定密钥也必须采用相同的形式。</p><p>主题交换背后的逻辑 类似于直接交换 使用特定路由密钥发送的消息将被传递到与匹配绑定密钥绑定的所有队列。</p><p>但是，绑定键有两个重要的特殊情况：</p><p>*（星号）可以替代一个单词。</p><p>＃（#号）可以替换零个或多个单词。</p><h5 id="6-RPC模式"><a href="#6-RPC模式" class="headerlink" title="6.RPC模式"></a>6.RPC模式</h5><p><img src="https://s3.bmp.ovh/imgs/2023/07/17/adca74906769284b.png" alt=""></p><p>客户端向一个队列中发送消息，并注册一个回调的队列用于接收服务端返回的消息，该消息需要声明一个叫做correaltionId的属性，</p><p>该属性将是该次请求的唯一标识。服务端在接受到消息（在需要时可以验证correaltionId）后，处理消息，并将消息发送到客户端注册的回调队列中。</p><p>对应代码，请查看下列几个类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RPCQueueConfig.java</span><br><span class="line">RPCQueueProducer.java</span><br><span class="line">RPCQueueConsumer.java</span><br></pre></td></tr></table></figure></p><h5 id="7-发布确认模式"><a href="#7-发布确认模式" class="headerlink" title="7.发布确认模式"></a>7.发布确认模式</h5><p>与发布者进行可靠的发布确认，发布者确认是RabbitMQ扩展，可以实现可靠的发布。在通道上启用发布者确认后，RabbitMQ将异步确认发送者发布的消息，这意味着它们已在服务器端处理。</p><h2 id="代码地址"><a href="#代码地址" class="headerlink" title="代码地址"></a>代码地址</h2><p><a href="https://gitee.com/lvoyee/springboot-rabbitmq/" target="_blank" rel="noopener">点我获取代码</a></p><hr><p>The end.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;如何使用springboot整合rabbitmq的几种模式，这篇就给出了对应的demo，地址放在文章后面。&lt;/p&gt;
&lt;p&gt;前
      
    
    </summary>
    
      <category term="blogshare" scheme="http://www.devcheng.net/categories/blogshare/"/>
    
    
      <category term="centos7" scheme="http://www.devcheng.net/tags/centos7/"/>
    
      <category term="rabbitmq" scheme="http://www.devcheng.net/tags/rabbitmq/"/>
    
  </entry>
  
  <entry>
    <title>centos7中安装rabbitmq</title>
    <link href="http://www.devcheng.net/post/a3a60b55.html"/>
    <id>http://www.devcheng.net/post/a3a60b55.html</id>
    <published>2023-07-18T13:03:22.000Z</published>
    <updated>2023-07-18T13:06:49.796Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>安装rabbitmq之前必须先安装一些必要的依赖，这里安装的环境是在centos7中进行。</p><p>官方网址：<a href="https://www.rabbitmq.com/download.html" target="_blank" rel="noopener">https://www.rabbitmq.com/download.html</a></p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>1.将下载好的文件上传到服务器（这里我上传到了 /usr/local/software ）<br><img src="https://s3.bmp.ovh/imgs/2023/07/18/e3b923401f10bed0.png" alt=""></p><p>2.先安装erlang,然后安装 rabbitmq-server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost software]# rpm -ivh erlang-21.3.1-1.el7.x86_64.rpm</span><br><span class="line">警告：erlang-21.3.1-1.el7.x86_64.rpm: 头V4 RSA/SHA1 Signature, 密钥 ID 6026dfca: NOKEY</span><br><span class="line">准备中...                          ################################# [100%]</span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:erlang-21.3.1-1.el7              ################################# [100%]</span><br><span class="line">[root@localhost software]#</span><br></pre></td></tr></table></figure><p>继续安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost software]# yum install socat -y</span><br><span class="line">已加载插件：fastestmirror</span><br><span class="line">Determining fastest mirrors</span><br><span class="line"> * base: mirrors.ustc.edu.cn</span><br><span class="line"> * extras: mirrors.bfsu.edu.cn</span><br><span class="line"> * updates: mirrors.bfsu.edu.cn</span><br><span class="line">base                                                                                                                     | 3.6 kB  00:00:00</span><br><span class="line">docker-ce-stable                                                                                                         | 3.5 kB  00:00:00</span><br><span class="line">extras                                                                                                                   | 2.9 kB  00:00:00</span><br><span class="line">updates                                                                                                                  | 2.9 kB  00:00:00</span><br><span class="line">(1/3): extras/7/x86_64/primary_db                                                                                        | 250 kB  00:00:00</span><br><span class="line">(2/3): docker-ce-stable/7/x86_64/primary_db                                                                              | 114 kB  00:00:00</span><br><span class="line">(3/3): updates/7/x86_64/primary_db                                                                                       |  22 MB  00:00:02</span><br><span class="line">正在解决依赖关系</span><br><span class="line">--&gt; 正在检查事务</span><br><span class="line">---&gt; 软件包 socat.x86_64.0.1.7.3.2-2.el7 将被 安装</span><br><span class="line">--&gt; 解决依赖关系完成</span><br><span class="line"></span><br><span class="line">依赖关系解决</span><br><span class="line"></span><br><span class="line">================================================================================================================================================</span><br><span class="line"> Package                         架构                             版本                                     源                              大小</span><br><span class="line">================================================================================================================================================</span><br><span class="line">正在安装:</span><br><span class="line"> socat                           x86_64                           1.7.3.2-2.el7                            base                           290 k</span><br><span class="line"></span><br><span class="line">事务概要</span><br><span class="line">================================================================================================================================================</span><br><span class="line">安装  1 软件包</span><br><span class="line"></span><br><span class="line">总下载量：290 k</span><br><span class="line">安装大小：1.1 M</span><br><span class="line">Downloading packages:</span><br><span class="line">socat-1.7.3.2-2.el7.x86_64.rpm                                                                                           | 290 kB  00:00:00</span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction test</span><br><span class="line">Transaction test succeeded</span><br><span class="line">Running transaction</span><br><span class="line">警告：RPM 数据库已被非 yum 程序修改。</span><br><span class="line">  正在安装    : socat-1.7.3.2-2.el7.x86_64                                                                                                  1/1</span><br><span class="line">  验证中      : socat-1.7.3.2-2.el7.x86_64                                                                                                  1/1</span><br><span class="line"></span><br><span class="line">已安装:</span><br><span class="line">  socat.x86_64 0:1.7.3.2-2.el7</span><br><span class="line"></span><br><span class="line">完毕！</span><br><span class="line">[root@localhost software]#</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost software]# rpm -ivh rabbitmq-server-3.8.8-1.el7.noarch.rpm</span><br><span class="line">警告：rabbitmq-server-3.8.8-1.el7.noarch.rpm: 头V4 RSA/SHA256 Signature, 密钥 ID 6026dfca: NOKEY</span><br><span class="line">准备中...                          ################################# [100%]</span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:rabbitmq-server-3.8.8-1.el7      ################################# [100%]</span><br><span class="line">[root@localhost software]#</span><br></pre></td></tr></table></figure><p>看到以上的消息，说明安装成功了。先说说常用的命令，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 添加开机启动rabbitmq服务命令</span><br><span class="line">chkconfig rabbitmq-server on</span><br><span class="line"></span><br><span class="line"># 启动服务命令</span><br><span class="line">[root@localhost software]# systemctl start rabbitmq-server</span><br><span class="line"></span><br><span class="line"># 查看服务状态</span><br><span class="line">[root@localhost software]# systemctl status rabbitmq-server</span><br><span class="line"></span><br><span class="line"># 停止服务</span><br><span class="line">[root@localhost software]# systemctl stop rabbitmq-server</span><br></pre></td></tr></table></figure><p>3.安装web页面插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost software]# rabbitmq-plugins enable rabbitmq_management</span><br><span class="line">Enabling plugins on node rabbit@localhost:</span><br><span class="line">rabbitmq_management</span><br><span class="line">The following plugins have been configured:</span><br><span class="line">  rabbitmq_management</span><br><span class="line">  rabbitmq_management_agent</span><br><span class="line">  rabbitmq_web_dispatch</span><br><span class="line">Applying plugin configuration to rabbit@localhost...</span><br><span class="line">The following plugins have been enabled:</span><br><span class="line">  rabbitmq_management</span><br><span class="line">  rabbitmq_management_agent</span><br><span class="line">  rabbitmq_web_dispatch</span><br><span class="line"></span><br><span class="line">set 3 plugins.</span><br><span class="line">Offline change; changes will take effect at broker restart.</span><br></pre></td></tr></table></figure><p>4.重启rabbitmq-server，输入对应IP:15672即可访问页面，如果访问不了，可能是没有关闭防火墙；也可以把对应的端口开放即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost software]# firewall-cmd --zone=public --add-port=15672/tcp --permanent</span><br><span class="line">success</span><br><span class="line">[root@localhost software]#</span><br><span class="line">[root@localhost software]# firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>5.输入默认的用户名和密码 guest ,发现登录不了提示 User can only log in via loacalhost,重新添加一个用户赋权限即可，具体操作如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 创建用户</span><br><span class="line">rabbitmqctl add_user admin 123</span><br><span class="line"></span><br><span class="line"># 设置用户角色</span><br><span class="line">[root@localhost software]# rabbitmqctl set_user_tags admin administrator</span><br><span class="line">Setting tags for user &quot;admin&quot; to [administrator] ...</span><br><span class="line"></span><br><span class="line"># 设置用户权限</span><br><span class="line">[root@localhost software]# rabbitmqctl set_permissions -p &quot;/&quot; admin &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</span><br><span class="line">Setting permissions for user &quot;admin&quot; in vhost &quot;/&quot; ...</span><br><span class="line">[root@localhost software]#</span><br><span class="line"></span><br><span class="line"># 当前用户和角色</span><br><span class="line">[root@localhost software]# rabbitmqctl list_users</span><br><span class="line">Listing users ...</span><br><span class="line">user    tags</span><br><span class="line">admin   [administrator]</span><br><span class="line">guest   [administrator]</span><br></pre></td></tr></table></figure></p><p>使用 admin 密码 123 则可以登录进去了！</p><p><img src="https://s3.bmp.ovh/imgs/2023/07/18/a61be62d8ec3f68a.png" alt=""></p><hr><p>The end.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;安装rabbitmq之前必须先安装一些必要的依赖，这里安装的环境是在centos7中进行。&lt;/p&gt;
&lt;p&gt;官方网址：&lt;a h
      
    
    </summary>
    
      <category term="blogshare" scheme="http://www.devcheng.net/categories/blogshare/"/>
    
    
      <category term="centos7" scheme="http://www.devcheng.net/tags/centos7/"/>
    
      <category term="rabbitmq" scheme="http://www.devcheng.net/tags/rabbitmq/"/>
    
  </entry>
  
  <entry>
    <title>细说Spring Boot核心配置文件 bootstrap</title>
    <link href="http://www.devcheng.net/post/e8487bff.html"/>
    <id>http://www.devcheng.net/post/e8487bff.html</id>
    <published>2023-05-31T13:15:12.000Z</published>
    <updated>2023-05-31T13:23:37.048Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>用过 Spring Boot 的都知道在 Spring Boot 中有以下两种配置文件。</p><p>bootstrap (.yml 或者 .properties)</p><p>application (.yml 或者 .properties)</p><p>为什么会有这两种配置文件呢？</p><h1 id="bootstrap-application-的区别"><a href="#bootstrap-application-的区别" class="headerlink" title="bootstrap / application 的区别"></a>bootstrap / application 的区别</h1><p>在 Spring Cloud 的官方文档找到了它们的区别。</p><p>认真阅读了下文档，原文大概意思是这样。</p><p>Spring Cloud 构建于 Spring Boot 之上，在 Spring Boot 中有两种上下文，一种是 bootstrap, 另外一种是 application。</p><p>bootstrap 是应用程序的父上下文，也就是说 bootstrap 加载优先于 applicaton。</p><p>bootstrap  主要用于从额外的资源来加载配置信息，还可以在本地外部配置文件中解密属性。</p><p>这两个上下文共用一个环境，它是任何Spring应用程序的外部属性的来源。bootstrap 里面的属性会优先加载，它们默认也不能被本地相同配置覆盖。</p><p>因此，对比 application 配置文件，bootstrap 配置文件具有以下几个特性。</p><p>boostrap 由父 ApplicationContext 加载，比 applicaton 优先加载</p><p>boostrap 里面的属性不能被覆盖</p><h1 id="bootstrap-application-的应用场景"><a href="#bootstrap-application-的应用场景" class="headerlink" title="bootstrap/ application 的应用场景"></a>bootstrap/ application 的应用场景</h1><p>application 配置文件这个容易理解，主要用于 Spring Boot 项目的自动化配置。</p><p>bootstrap 配置文件有以下几个应用场景。</p><p>使用 Spring Cloud Config 配置中心时，这时需要在 bootstrap 配置文件中添加连接到配置中心的配置属性来加载外部配置中心的配置信息；</p><p>一些固定的不能被覆盖的属性</p><p>一些加密/解密的场景。</p><hr><p>The end.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;用过 Spring Boot 的都知道在 Spring Boot 中有以下两种配置文件。&lt;/p&gt;
&lt;p&gt;bootstrap 
      
    
    </summary>
    
      <category term="blogshare" scheme="http://www.devcheng.net/categories/blogshare/"/>
    
    
      <category term="Spring Boot核心配置文件" scheme="http://www.devcheng.net/tags/Spring-Boot%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    
      <category term="bootstrap" scheme="http://www.devcheng.net/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>Dockerfile构建SpringBoot镜像并推送到docker公共镜像仓库Dockerhub</title>
    <link href="http://www.devcheng.net/post/7b83f9aa.html"/>
    <id>http://www.devcheng.net/post/7b83f9aa.html</id>
    <published>2023-04-29T06:44:43.000Z</published>
    <updated>2023-05-31T13:16:19.004Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>前期准备工作主要有：准备好必要的环境，确保安装了docker，以及有一个Spring boot项目。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tips：本文所有操作均在宿主机上的 VMware (centos 7)中进行.</span><br></pre></td></tr></table></figure><h3 id="使用Dockerfile构建SpringBoot镜像"><a href="#使用Dockerfile构建SpringBoot镜像" class="headerlink" title="使用Dockerfile构建SpringBoot镜像"></a>使用Dockerfile构建SpringBoot镜像</h3><p>1.新建一个文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /yicheng/passwordGenerator/</span><br></pre></td></tr></table></figure><p>2.把Spring boot项目打包成jar放在此目录下，并且新建文件Dockerfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 使用Java8</span><br><span class="line">FROM java:8</span><br><span class="line"># 作者</span><br><span class="line">MAINTAINER yicheng</span><br><span class="line"># VOLUME 指定临时文件目录为/tmp，在主机/var/lib/docker目录下创建了一个临时文件并链接到容器的/tmp</span><br><span class="line">VOLUME /tmp</span><br><span class="line"># 将jar包添加到容器中并更名</span><br><span class="line">ADD passwordGenerator-0.0.1-SNAPSHOT.jar pwdGenerator_docker.jar</span><br><span class="line"># 运行jar包</span><br><span class="line">RUN bash -c &apos;touch /pwdGenerator_docker.jar&apos;</span><br><span class="line">ENTRYPOINT [&quot;java&quot;,&quot;-jar&quot;,&quot;/pwdGenerator_docker.jar&quot;]</span><br><span class="line">#暴露8889端口作为微服务</span><br><span class="line">EXPOSE 8999</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost passwordGenerator]# ls</span><br><span class="line">Dockerfile  passwordGenerator-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><p>3.开始构建镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t pwdgenerator_docker:1.0 .</span><br></pre></td></tr></table></figure><p>主要镜像名不能大写！</p><p>4.运行镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8080:8080 【容器id】</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost passwordGenerator]# docker images</span><br><span class="line">REPOSITORY            TAG            IMAGE ID       CREATED          SIZE</span><br><span class="line">&lt;none&gt;                &lt;none&gt;         7d229f7ebdd4   33 minutes ago   680MB</span><br><span class="line">pwdgenerator_docker   1.0            e6c6bbfe9344   33 minutes ago   680MB</span><br><span class="line">neosmemo/memos        latest         322df040d768   11 days ago      36MB</span><br><span class="line">tomcat                latest         6dd589e60602   6 months ago     474MB</span><br><span class="line">dataengine_docker     1.0            3080d43f20c2   8 months ago     853MB</span><br><span class="line">mysql                 5.7            3147495b3a5c   9 months ago     431MB</span><br><span class="line">nacos/nacos-server    1.4.2          938169b118c7   24 months ago    956MB</span><br><span class="line">portainer/portainer   latest         980323c8eb3f   2 years ago      196MB</span><br><span class="line">redis                 5.0.9-alpine   4e5490070cce   2 years ago      29.2MB</span><br><span class="line">redis                 6.0.8          16ecd2772934   2 years ago      104MB</span><br><span class="line">java                  8              d23bdf5b1b1b   6 years ago      643MB</span><br><span class="line">[root@localhost passwordGenerator]#</span><br><span class="line">[root@localhost passwordGenerator]# docker run -d -p 8999:8999 7d229f7ebdd4</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2023/04/27/7a54487e5ec86085.png" alt="伊成博客"></p><p>到此我们完成了第一个小目标，使用Dockerfile构建SpringBoot镜像并且成功的运行了。</p><h3 id="发布镜像到Docker-hub"><a href="#发布镜像到Docker-hub" class="headerlink" title="发布镜像到Docker-hub"></a>发布镜像到Docker-hub</h3><p>1.访问 <a href="https://hub.docker.com" target="_blank" rel="noopener">https://hub.docker.com</a> 注册账号，这里的用户名和密码一定要记住了，后续需要。</p><p>2.登录docker-hub,输入用户名和密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost passwordGenerator]# docker login</span><br><span class="line">Login with your Docker ID to push and pull images from Docker Hub. If you don&apos;t have a Docker ID, head over to https://hub.docker.com to                                                                       create one.</span><br><span class="line">Username: 输入你的用户名</span><br><span class="line">Password:</span><br><span class="line">WARNING! Your password will be stored unencrypted in /root/.docker/config.json.</span><br><span class="line">Configure a credential helper to remove this warning. See</span><br><span class="line">https://docs.docker.com/engine/reference/commandline/login/#credentials-store</span><br><span class="line"></span><br><span class="line">Login Succeeded</span><br></pre></td></tr></table></figure><p>3.提交镜像至Docker-hub<br>命令：docker push <hub-user>/<repo-name> :<tag></tag></repo-name></hub-user></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost passwordGenerator]# docker push yicheng2023/pwdgenerator:1.0</span><br><span class="line">The push refers to repository [docker.io/yicheng2023/pwdgenerator]</span><br><span class="line">f6462cee0153: Pushed</span><br><span class="line">dd456a172e38: Pushed</span><br><span class="line">35c20f26d188: Mounted from library/java</span><br><span class="line">c3fe59dd9556: Mounted from library/java</span><br><span class="line">6ed1a81ba5b6: Mounted from library/java</span><br><span class="line">a3483ce177ce: Mounted from library/java</span><br><span class="line">ce6c8756685b: Mounted from library/java</span><br><span class="line">30339f20ced0: Mounted from library/java</span><br><span class="line">0eb22bfb707d: Mounted from library/java</span><br><span class="line">a2ae92ffcd29: Mounted from library/java</span><br><span class="line">1.0: digest: sha256:273386989c0f4cf97842dc0cf3187ab2788564528cd642cbd11159c6693636fc size: 2424</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2023/04/28/302a6d462446b343.png" alt="伊成博客"></p><p>到此就完成了将镜像推送到Docker-hub公共仓库的所有步骤。</p><hr><p>The end.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;前期准备工作主要有：准备好必要的环境，确保安装了docker，以及有一个Spring boot项目。&lt;/p&gt;
&lt;figure
      
    
    </summary>
    
      <category term="blogshare" scheme="http://www.devcheng.net/categories/blogshare/"/>
    
    
      <category term="Dockerfile" scheme="http://www.devcheng.net/tags/Dockerfile/"/>
    
  </entry>
  
  <entry>
    <title>docker开启和关闭容器自启动</title>
    <link href="http://www.devcheng.net/post/50c46cfa.html"/>
    <id>http://www.devcheng.net/post/50c46cfa.html</id>
    <published>2023-04-29T06:40:12.000Z</published>
    <updated>2023-04-29T06:43:24.928Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s3.bmp.ovh/imgs/2023/04/25/381013ce3a10b5b9.png" alt="伊成博客"></p><p>简单记录一下，docker中开启和关闭容器自启动两种情况的命令。</p><h2 id="开启容器的自启动"><a href="#开启容器的自启动" class="headerlink" title="开启容器的自启动"></a>开启容器的自启动</h2><p>1.在docker启动容器时可以增加参数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --restart=always</span><br></pre></td></tr></table></figure></p><p>2.容器已经启动但是没有开启自启动,可以通过update命令进行修改。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker update --restart=always &lt;CONTAINER ID&gt;</span><br></pre></td></tr></table></figure></p><h2 id="关闭容器的自启动"><a href="#关闭容器的自启动" class="headerlink" title="关闭容器的自启动"></a>关闭容器的自启动</h2><p>1.关闭一个容器的自启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker update --restart=no &lt;CONTAINER ID&gt;</span><br></pre></td></tr></table></figure></p><p>2.关闭所有容器的自启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker update --restart=no $(docker ps -q)</span><br></pre></td></tr></table></figure></p><hr><p>The end.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://s3.bmp.ovh/imgs/2023/04/25/381013ce3a10b5b9.png&quot; alt=&quot;伊成博客&quot;&gt;&lt;/p&gt;
&lt;p&gt;简单记录一下，docker中开启和关闭容器自启动两种情况的命令。&lt;/p&gt;
&lt;h2 id=&quot;开启容器的自
      
    
    </summary>
    
      <category term="blogshare" scheme="http://www.devcheng.net/categories/blogshare/"/>
    
    
      <category term="docker容器自启动" scheme="http://www.devcheng.net/tags/docker%E5%AE%B9%E5%99%A8%E8%87%AA%E5%90%AF%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>2023年金三银四怎么不见了？</title>
    <link href="http://www.devcheng.net/post/408b0414.html"/>
    <id>http://www.devcheng.net/post/408b0414.html</id>
    <published>2023-03-16T05:03:06.000Z</published>
    <updated>2023-03-16T05:08:38.552Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>不少人都应该发现了今年的工作不是很好找，无论是什么行业什么岗位都比之前难找了。往年的金三银四怎么不见了呢，前段时间还和朋友聊天说到，去年疫情大家几乎都被感染过了一次，今年疫情逐渐好转了许多。年后应该会好找一点，可结果却不是这样的情况。</p><h1 id="工作难找"><a href="#工作难找" class="headerlink" title="工作难找"></a>工作难找</h1><p>现状在各种招聘软件投简历基本都是石沉大海的结果，回复的寥寥无几。新开的岗位分分钟都可以收到上百份简历。</p><p>2023年有1150万的应届大学毕业生要找工作；各行各业都不景气，很多企业都在大幅裁员；物价在不断上涨等多方面原因。</p><p>2022年上半年，就有46万家企业倒闭，113万家个体工商户注销，现在的生意是越来越难做了。而即使各地放开了对疫情的防控措施，现在老百姓也都不敢去人流较多的商店或超市，所以逛街的人也越来越少。</p><p>如今很多家庭面临投资困境：一边是通货膨胀越来越厉害，另一边是银行存款利率越来越低，而各类理财品种的风险却在不断的上升。这就意味着，如果你把钱存在银行里面，就要面对货币贬值。</p><p>而如果你把资金购买股票、基金、银行理财、期权等高收益投资品，却很可能面临资产缩水的风险，投资者真的不知道该怎么办？</p><p>国内物价上涨的原因，除了输入性通胀之外，还有就是我国央行的货币政策的持续宽松，当然，也有受疫情影响，社会生产能力减弱等因素。</p><p>现在老百姓深感生活支出成本上升了，而物价上涨的情况在2023年还将会继续。</p><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>金三银四看来今年不存在的，各位还是不要裸辞的好</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;不少人都应该发现了今年的工作不是很好找，无论是什么行业什么岗位都比之前难找了。往年的金三银四怎么不见了呢，前段时间还和朋友聊
      
    
    </summary>
    
      <category term="codelife" scheme="http://www.devcheng.net/categories/codelife/"/>
    
    
      <category term="工作" scheme="http://www.devcheng.net/tags/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="金三银四" scheme="http://www.devcheng.net/tags/%E9%87%91%E4%B8%89%E9%93%B6%E5%9B%9B/"/>
    
  </entry>
  
  <entry>
    <title>基于SpringBoot开发的垃圾分类回收管理系统源码分享</title>
    <link href="http://www.devcheng.net/post/2a7e1341.html"/>
    <id>http://www.devcheng.net/post/2a7e1341.html</id>
    <published>2023-03-06T12:04:50.000Z</published>
    <updated>2023-03-06T12:09:35.525Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>本项目是基于Spring Boot 2.x 开发的垃圾分类回收管理系统。本项目也可以当作毕业设计，期末课程作业等，也可以当作学习、进阶Spring Boot 的资料。</p><h1 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h1><p>本项目分为三种角色，分别为 超级管理员，管理员和员工。不同的角色享有不同的权限。</p><ul><li>员工管理模块</li><li>管理员管理模块</li><li>个人信息模块</li><li>在库垃圾查询模块</li><li>垃圾去向模块</li><li>公告管理模块</li><li>垃圾回收模块</li><li>…</li></ul><h1 id="开发环境（运行环境）"><a href="#开发环境（运行环境）" class="headerlink" title="开发环境（运行环境）"></a>开发环境（运行环境）</h1><ul><li>系统环境：Windows 11</li><li>开发工具：IntelliJ IDEA 2020.3</li><li>Java版本：JDK 1.8</li><li>Mysql版本：5.7</li><li>Maven版本：3.6.3</li></ul><h1 id="项目技术栈"><a href="#项目技术栈" class="headerlink" title="项目技术栈"></a>项目技术栈</h1><ul><li>Spring Boot 2.3.4.RELEASE</li><li>Mybatis</li><li>Maven 3.X</li><li>Mysql</li><li>layui </li><li>Jquery</li><li>…</li></ul><h1 id="登录地址"><a href="#登录地址" class="headerlink" title="登录地址"></a>登录地址</h1><p>项目访问路径：<a href="http://localhost:8085" target="_blank" rel="noopener">http://localhost:8085</a></p><p>超级管理员 用户名 / 密码</p><p>18612341234 / asdfghjk</p><p>管理员 用户名 / 密码</p><p>17859865548 / asdfghjk</p><p>员工   用户名 / 密码</p><p>13055879915 / 12345678</p><h1 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h1><p><img src="https://s3.bmp.ovh/imgs/2023/02/20/92ba02aa3c4ec94f.png" alt="devcheng_net_ljhsym_001.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/02/20/dfb3a06884a4e9df.png" alt="devcheng_net_ljhsym_002.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/02/20/2c4057d72540e7c4.png" alt="devcheng_net_ljhsym_003.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/02/20/9663b79ebe2b2a7e.png" alt="devcheng_net_ljhsym_004.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/02/20/8db643f343ba9558.png" alt="devcheng_net_ljhsym_005.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/02/20/c807c7668477d874.png" alt="devcheng_net_ljhsym_006.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/02/20/6b9c42cdcee7599a.png" alt="devcheng_net_ljhsym_007.png"></p><h1 id="项目演示视频"><a href="#项目演示视频" class="headerlink" title="项目演示视频"></a>项目演示视频</h1><p>链接: <a href="https://pan.baidu.com/s/1cxmMqstpxiu1--elpNGXfg" target="_blank" rel="noopener">https://pan.baidu.com/s/1cxmMqstpxiu1--elpNGXfg</a> </p><p>提取码: xkmy</p><h1 id="联系我们"><a href="#联系我们" class="headerlink" title="联系我们"></a>联系我们</h1><p>如有需要源码可以通过QQ 搜索：792435323联系我！<br>请备注：垃圾分类源码</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>获取代码之后，使用IDEA导入本项目前，请确保你本地环境是已经含有代码所需要运行环境的条件了。</p><p>接着找到对应的sql文件，将其导入到你本地的数据库即可。</p><p>最后修改项目中配置文件中的数据库对应的信息，确认修改完毕，找到对应的DemoApplication直接运行吧！</p><h1 id="其它说明"><a href="#其它说明" class="headerlink" title="其它说明"></a>其它说明</h1><p>白嫖怪，伸手党 请绕道！！！</p><hr><p>The end.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;本项目是基于Spring Boot 2.x 开发的垃圾分类回收管理系统。本项目也可以当作毕业设计，期末课程作业等，也可以当作
      
    
    </summary>
    
      <category term="codeshare" scheme="http://www.devcheng.net/categories/codeshare/"/>
    
    
      <category term="垃圾分类系统" scheme="http://www.devcheng.net/tags/%E5%9E%83%E5%9C%BE%E5%88%86%E7%B1%BB%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="垃圾分类回收管理系统" scheme="http://www.devcheng.net/tags/%E5%9E%83%E5%9C%BE%E5%88%86%E7%B1%BB%E5%9B%9E%E6%94%B6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>springboot项目对数据库密码加解密</title>
    <link href="http://www.devcheng.net/post/1663aa3c.html"/>
    <id>http://www.devcheng.net/post/1663aa3c.html</id>
    <published>2023-02-18T01:41:46.000Z</published>
    <updated>2023-02-18T01:59:09.296Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>我相信大多数人在配置文件中都是以明文的形式配置数据库的用户名和密码的，如下展示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 明文形式</span><br><span class="line">spring.datasource.mysql.jdbc-url=jdbc:mysql://127.0.0.1:3306/data?characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai&amp;allowMultiQueries=true</span><br><span class="line">spring.datasource.mysql.driverClassName=com.mysql.cj.jdbc.Driver</span><br><span class="line">spring.datasource.mysql.username=root</span><br><span class="line">spring.datasource.mysql.password=123456</span><br></pre></td></tr></table></figure><p>显然这样配置不是很安全，所以我们可以对用户名和密码进行加密，这样配置后需要进行解密才知道我们配置的用户名和密码具体是什么。</p><p>接下来跟着步骤 do it</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="第一步-添加引入依赖"><a href="#第一步-添加引入依赖" class="headerlink" title="第一步 添加引入依赖"></a>第一步 添加引入依赖</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.github.ulisesbocchio&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jasypt-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.1.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="第二步-制定私钥和生成对应的加密串"><a href="#第二步-制定私钥和生成对应的加密串" class="headerlink" title="第二步 制定私钥和生成对应的加密串"></a>第二步 制定私钥和生成对应的加密串</h2><p>在你的配置文件中配置好你的私钥字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jasypt.encryptor.password=私钥字符串</span><br></pre></td></tr></table></figure></p><p>第一步完成后找到对应依赖文件夹里面 org\jasypt\jasypt\1.9.2&gt;<br>进行加密操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\usmart\.m2\repository\org\jasypt\jasypt\1.9.2&gt;</span><br><span class="line">java -cp jasypt-1.9.2.jar org.jasypt.intf.cli.JasyptPBEStringEncryptionCLI </span><br><span class="line">input=&quot;root&quot; password=data algorithm=PBEWithMD5AndDES</span><br></pre></td></tr></table></figure><p>input 里面就是你要加密的字符串</p><p>password 就是你的私钥字符串</p><p>algorithm=PBEWithMD5AndDES 固定的不需要改</p><h2 id="解密命令-（一般不需要）"><a href="#解密命令-（一般不需要）" class="headerlink" title="解密命令 （一般不需要）"></a>解密命令 （一般不需要）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\usmart\.m2\repository\org\jasypt\jasypt\1.9.2&gt;java -cp jasypt-1.9.2.jar org.jasypt.intf.cli.JasyptPBEStringDecryptionCLI input=&quot;ri60tsMfnqk+usK+nXjQuQ==&quot; password=data algorithm=PBEWithMD5AndDES</span><br><span class="line"></span><br><span class="line">----ENVIRONMENT-----------------</span><br><span class="line"></span><br><span class="line">Runtime: Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.271-b09</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----ARGUMENTS-------------------</span><br><span class="line"></span><br><span class="line">algorithm: PBEWithMD5AndDES</span><br><span class="line">input: ri60tsMfnqk+usK+nXjQuQ==</span><br><span class="line">password: data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----OUTPUT----------------------</span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>到这里就结束了，两步就搞定了。</p><hr><p>The end</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;我相信大多数人在配置文件中都是以明文的形式配置数据库的用户名和密码的，如下展示：&lt;/p&gt;
&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="blogshare" scheme="http://www.devcheng.net/categories/blogshare/"/>
    
    
      <category term="springboot" scheme="http://www.devcheng.net/tags/springboot/"/>
    
      <category term="数据库加密解密" scheme="http://www.devcheng.net/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>IDEA 高频实用快捷键</title>
    <link href="http://www.devcheng.net/post/8666c7d8.html"/>
    <id>http://www.devcheng.net/post/8666c7d8.html</id>
    <published>2022-12-16T02:27:13.000Z</published>
    <updated>2022-12-16T02:34:52.633Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>最近翻阅之前的笔记，重新整理了一番。把IDEA中比较高频实用的快捷键重新整理了一下，自己备忘记录一下。</p><h2 id="IDEA高频实用快捷键"><a href="#IDEA高频实用快捷键" class="headerlink" title="IDEA高频实用快捷键"></a>IDEA高频实用快捷键</h2><h3 id="Ctrl-Alt-O-移除未使用的包"><a href="#Ctrl-Alt-O-移除未使用的包" class="headerlink" title="Ctrl + Alt + O : 移除未使用的包"></a>Ctrl + Alt + O : 移除未使用的包</h3><p>可能会和QQ 屏幕识图快捷键冲突，解决方法可重新自定义QQ快捷键。</p><h3 id="Ctrl-Alt-M：重构函数-将选中代码提取为函数"><a href="#Ctrl-Alt-M：重构函数-将选中代码提取为函数" class="headerlink" title="Ctrl + Alt + M：重构函数:将选中代码提取为函数"></a>Ctrl + Alt + M：重构函数:将选中代码提取为函数</h3><h3 id="Ctrl-Alt-L：代码格式化"><a href="#Ctrl-Alt-L：代码格式化" class="headerlink" title="Ctrl + Alt + L：代码格式化"></a>Ctrl + Alt + L：代码格式化</h3><p>可能会和QQ 中的快捷键冲突，解决方法可重新自定义QQ快捷键。</p><h3 id="Ctrl-Alt-T：可以把代码包在一个块内，例如：try-catch"><a href="#Ctrl-Alt-T：可以把代码包在一个块内，例如：try-catch" class="headerlink" title="Ctrl + Alt + T：可以把代码包在一个块内，例如：try/catch"></a>Ctrl + Alt + T：可以把代码包在一个块内，例如：try/catch</h3><h3 id="Ctrl-Alt-B：定位至选中类或者方法的具体实现"><a href="#Ctrl-Alt-B：定位至选中类或者方法的具体实现" class="headerlink" title="Ctrl + Alt + B：定位至选中类或者方法的具体实现"></a>Ctrl + Alt + B：定位至选中类或者方法的具体实现</h3><h3 id="Ctrl-Shift-F：全局查找快捷键"><a href="#Ctrl-Shift-F：全局查找快捷键" class="headerlink" title="Ctrl + Shift + F：全局查找快捷键"></a>Ctrl + Shift + F：全局查找快捷键</h3><h3 id="Ctrl-Shift-R：全局替换"><a href="#Ctrl-Shift-R：全局替换" class="headerlink" title="Ctrl + Shift + R：全局替换"></a>Ctrl + Shift + R：全局替换</h3><h3 id="Ctrl-Shift-U：大小写切换"><a href="#Ctrl-Shift-U：大小写切换" class="headerlink" title="Ctrl + Shift + U：大小写切换"></a>Ctrl + Shift + U：大小写切换</h3><h3 id="Ctrl-Shift-：使用-注释"><a href="#Ctrl-Shift-：使用-注释" class="headerlink" title="Ctrl + Shift + /：使用 /**/ 注释"></a>Ctrl + Shift + /：使用 /**/ 注释</h3><h3 id="Ctrl-：使用-注释"><a href="#Ctrl-：使用-注释" class="headerlink" title="Ctrl + /：使用 // 注释"></a>Ctrl + /：使用 // 注释</h3><h3 id="Ctrl-X（Ctrl-Y）：删除行"><a href="#Ctrl-X（Ctrl-Y）：删除行" class="headerlink" title="Ctrl + X（Ctrl + Y）：删除行"></a>Ctrl + X（Ctrl + Y）：删除行</h3><h3 id="Ctrl-D：复制行"><a href="#Ctrl-D：复制行" class="headerlink" title="Ctrl + D：复制行"></a>Ctrl + D：复制行</h3><h3 id="Ctrl-Shift-Alt-J：批量修改变量快捷键"><a href="#Ctrl-Shift-Alt-J：批量修改变量快捷键" class="headerlink" title="Ctrl+Shift+Alt+J：批量修改变量快捷键"></a>Ctrl+Shift+Alt+J：批量修改变量快捷键</h3><h3 id="F2-或-Shift-F2：快速定位高亮错误或警告"><a href="#F2-或-Shift-F2：快速定位高亮错误或警告" class="headerlink" title="F2 或 Shift+F2：快速定位高亮错误或警告"></a>F2 或 Shift+F2：快速定位高亮错误或警告</h3><h3 id="Shift-Click：可以关闭文件"><a href="#Shift-Click：可以关闭文件" class="headerlink" title="Shift+Click：可以关闭文件"></a>Shift+Click：可以关闭文件</h3><hr><p>如果还有什么其他高频实用的快捷键，欢迎留言，我看到后会持续更新补充进来~</p><hr><p>The end.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;最近翻阅之前的笔记，重新整理了一番。把IDEA中比较高频实用的快捷键重新整理了一下，自己备忘记录一下。&lt;/p&gt;
&lt;h2 id
      
    
    </summary>
    
      <category term="blogshare" scheme="http://www.devcheng.net/categories/blogshare/"/>
    
    
      <category term="IDEA快捷键" scheme="http://www.devcheng.net/tags/IDEA%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL中如何调用存储过程</title>
    <link href="http://www.devcheng.net/post/c68e4207.html"/>
    <id>http://www.devcheng.net/post/c68e4207.html</id>
    <published>2022-11-24T02:17:03.000Z</published>
    <updated>2022-11-24T02:33:26.367Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近公司有一个需求每天晚上定时需要往某个表里面插入一条汇总数据。解决方案有几个，可以通过编写代码添加一个定时任务接口；还有一个则可以利用MYSQL中的定时调度存储过程解决，其实两种方案都可以，这里我选择的是 MYSQL 定时调用 存储过程。</p><h2 id="具体实现过程"><a href="#具体实现过程" class="headerlink" title="具体实现过程"></a>具体实现过程</h2><p>1.先看看定时器的状态，执行如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show VARIABLES LIKE &apos;%sche%&apos;;</span><br></pre></td></tr></table></figure><p><img src="/images/image-20221123174451389.png" alt="image-20221123174451389"></p><p>event_scheduler : OFF 代表没有开启。这里需要执行以下命令开启：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET GLOBAL event_scheduler = 1;</span><br></pre></td></tr></table></figure><p><img src="/images/image-20221123174821425.png" alt="image-20221123174821425"></p><p>2.编写存储过程，格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 存储过程 </span><br><span class="line">CREATE PROCEDURE 存储过程名()</span><br><span class="line"> </span><br><span class="line">BEGIN</span><br><span class="line">   -- 这里编写你的业务逻辑SQL </span><br><span class="line">END;</span><br></pre></td></tr></table></figure><p>3.测试写好的存储过程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call 存储过程名</span><br></pre></td></tr></table></figure><p>4.开启事件，定时调用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create event 事件名</span><br><span class="line">on schedule EVERY 1 DAY STARTS &apos;2022-11-10 23:51:00&apos;   -- 执行时间 </span><br><span class="line">do call 存储过程名;</span><br></pre></td></tr></table></figure><p>到此，完整流程就是以上这些了。最后附上我的完整SQL，供参考。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-- 查看定时器的状态</span><br><span class="line">show VARIABLES LIKE &apos;%sche%&apos;;</span><br><span class="line"></span><br><span class="line">-- 开启</span><br><span class="line">SET GLOBAL event_scheduler = 1;</span><br><span class="line"></span><br><span class="line">-- 存储过程 </span><br><span class="line">CREATE PROCEDURE saveTownActiveRateSortDataDaily()</span><br><span class="line"> </span><br><span class="line">BEGIN</span><br><span class="line">  set @sumactivenums =(select sum(activenums) from t_table_town_active_rate_sort_data);</span><br><span class="line">  set @sumbicyclenums =(select sum(bicyclenums) from t_table_town_active_rate_sort_data);</span><br><span class="line">  set @cnt = (SELECT DATE_FORMAT(SYSDATE(),&apos;%Y-%m-%d %H:%i:%s&apos;));</span><br><span class="line"></span><br><span class="line">insert into t_table_bicycle_diagram_info(sum_active_num,sum_bicycle_num,insert_date) </span><br><span class="line">VALUES (@sumactivenums, @sumbicyclenums, @cnt);  </span><br><span class="line">END;</span><br><span class="line"></span><br><span class="line">-- 调用</span><br><span class="line">call saveTownActiveRateSortDataDaily</span><br><span class="line"></span><br><span class="line">-- 开启事件，定时调用</span><br><span class="line">create event save_data</span><br><span class="line">on schedule EVERY 1 DAY STARTS &apos;2022-11-10 23:51:00&apos;</span><br><span class="line">do call saveTownActiveRateSortDataDaily();</span><br></pre></td></tr></table></figure><hr><p>The end.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近公司有一个需求每天晚上定时需要往某个表里面插入一条汇总数据。解决方案有几个，可以通过编写代码添加一个定时任务接口；还有一个则可以利用MY
      
    
    </summary>
    
      <category term="blogshare" scheme="http://www.devcheng.net/categories/blogshare/"/>
    
    
      <category term="MYSQL" scheme="http://www.devcheng.net/tags/MYSQL/"/>
    
      <category term="定时调用存储过程" scheme="http://www.devcheng.net/tags/%E5%AE%9A%E6%97%B6%E8%B0%83%E7%94%A8%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>基于Spring Boot开发的酒店管理系统</title>
    <link href="http://www.devcheng.net/post/cc09a51.html"/>
    <id>http://www.devcheng.net/post/cc09a51.html</id>
    <published>2022-11-22T06:43:51.000Z</published>
    <updated>2022-11-22T06:57:25.764Z</updated>
    
    <content type="html"><![CDATA[<p>本项目是基于Spring Boot 2.x 开发的，酒店管理系统分三种角色：经理（管理员）和员工（普通用户）两种用户， 其中经理（管理员）具有查看所有预定、删除客房、查看员工、添加员工等功能权限 员工（普通用户）具有查看空房、客户预订、修改预订、删除预订、注册新客户等功能权限。</p><p>大体流程如下：</p><p>1.经理（系统管理员）设置客房状态并且设置每晚价格。</p><p>2.客户可以通过员工预定房间，或者自己预定房间，并且可以选择预定时间（包含钟点房）</p><p>3.当客户退房后，通知保洁员进行卫生打扫，保洁员确定卫生情况后，客房重新变为可预定，并且密码重新随机生成</p><p>5.老板可以设置经理，员工，保洁员的工资，根据业绩比例进行分配</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><p><strong>预订管理</strong></p><p>添加客房的预订，当客房被预定后，在预订时间到之前均显示不可用。</p><p>删除客人的预订，当客人取消预定,或者到达预定保留时间后，要求取消预定。在前台管理人员确定后,系统将已经预订的房间改为空房。</p><p>更改预定状态，当客人在规定的时间范围内到达，由管理员将客人所定房间的状态改为有人。</p><p><strong>订房管理</strong></p><p>房间查询，查询房间的状态(包括房间是否为空，以及房间的类型)。</p><p>分配房间，根据查询的结果，以及客人的要求，将空房改为占用状态,并确认房间的类型。</p><p>结账，先结账后付钱的客人先记录在系统中，在付钱后将纪录状态改为已经付帐。</p><p>退房等。</p><p><strong>客房管理</strong></p><p>客房退房后，保洁阿姨打扫完房间后可设置已打扫。</p><p><strong>财务管理</strong></p><p>收入和房间数的统计。</p><p><strong>人事管理</strong></p><p>员工信息管理，包括员工工资、提成等</p><h2 id="开发环境（运行环境）"><a href="#开发环境（运行环境）" class="headerlink" title="开发环境（运行环境）"></a><strong>开发环境（运行环境）</strong></h2><ul><li>系统环境：Windows 11</li><li>开发工具：IntelliJ IDEA 2020.3</li><li>Java版本：JDK 1.8</li><li>Mysql版本：5.7</li><li>Maven版本：3.6.3</li></ul><h2 id="项目技术栈"><a href="#项目技术栈" class="headerlink" title="项目技术栈"></a><strong>项目技术栈</strong></h2><ul><li>Spring Boot 2.0.X.RELEASE</li><li>Bootstrap</li><li>Maven 3.X</li><li>Mysql</li><li>thymeleaf</li><li>js</li><li>Jquery</li><li>…</li></ul><h2 id="登录地址"><a href="#登录地址" class="headerlink" title="登录地址"></a><strong>登录地址</strong></h2><p>访问路径：<a href="http://localhost:8088" target="_blank" rel="noopener">http://localhost:8088</a></p><p>管理员账号/密码： admin / admin</p><p>员工账号/密码：<a href="mailto:tom@jiudian.com" target="_blank" rel="noopener">tom@jiudian.com</a>/ 123456</p><p>保洁员账号/密码：<a href="mailto:zhangyi@clean.com" target="_blank" rel="noopener">zhangyi@clean.com</a>/ 123456</p><h2 id="项目演示视频"><a href="#项目演示视频" class="headerlink" title="项目演示视频"></a><strong>项目演示视频</strong></h2><p>链接: <a href="https://pan.baidu.com/s/12qd637UuboPqVMi_1Iyjeg?pwd=m6md" target="_blank" rel="noopener">https://pan.baidu.com/s/12qd637UuboPqVMi_1Iyjeg?pwd=m6md</a> </p><p>提取码: m6md </p><h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a><strong>项目截图</strong></h2><p><img src="/images/image-20221121144612793.png" alt="image-20221121144612793"></p><p><img src="/images/image-20221121144636594.png" alt="image-20221121144636594"></p><p><img src="/images/image-20221121144650146.png" alt="image-20221121144650146"></p><p><img src="/images/image-20221121144703473.png" alt="image-20221121144703473"></p><p><img src="/images/image-20221121144718469.png" alt="image-20221121144718469"></p><p><img src="/images/image-20221121144828638.png" alt="image-20221121144828638"></p><p><img src="/images/image-20221121144920955.png" alt="image-20221121144920955"></p><h2 id="联系我们"><a href="#联系我们" class="headerlink" title="联系我们"></a><strong>联系我们</strong></h2><p>如有需要源码可以通过QQ 搜索：792435323联系我！<br>请备注：酒店源码</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><strong>注意事项</strong></h2><p>获取代码之后，使用IDEA导入本项目前，请确保你本地环境是已经含有代码所需要运行环境的条件了。</p><p>接着找到对应的sql文件，将其导入到你本地的数据库即可。</p><p>最后修改项目中配置文件中的数据库对应的信息，确认修改完毕，找到对应的ManageApplication直接运行吧！</p><h2 id="其它说明"><a href="#其它说明" class="headerlink" title="其它说明"></a><strong>其它说明</strong></h2><p>白嫖怪（伸手党）请绕道！</p><hr><p>The end.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本项目是基于Spring Boot 2.x 开发的，酒店管理系统分三种角色：经理（管理员）和员工（普通用户）两种用户， 其中经理（管理员）具有查看所有预定、删除客房、查看员工、添加员工等功能权限 员工（普通用户）具有查看空房、客户预订、修改预订、删除预订、注册新客户等功能权
      
    
    </summary>
    
      <category term="codeshare" scheme="http://www.devcheng.net/categories/codeshare/"/>
    
    
      <category term="Spring Boot" scheme="http://www.devcheng.net/tags/Spring-Boot/"/>
    
      <category term="酒店管理系统" scheme="http://www.devcheng.net/tags/%E9%85%92%E5%BA%97%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot统计接口请求耗时</title>
    <link href="http://www.devcheng.net/post/789179de.html"/>
    <id>http://www.devcheng.net/post/789179de.html</id>
    <published>2022-11-19T12:24:22.000Z</published>
    <updated>2022-11-24T02:20:27.064Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>接口请求时间的快慢就代表着获取到对应的数据的快慢，也代表着用户请求页面数据的快慢，常常可以借助接口请求快慢进行相应的优化！</p><p>以往我们的做法可能是在每一个接口的方法中的开始添加当前时间，结尾用当前时间减去开始时间就表示该接口的访问时间。</p><p>具体代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/test"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> startTime = System.currentTimeMillis();</span><br><span class="line">    <span class="comment">//此处的调用业务代码省略</span></span><br><span class="line">    System.out.println(<span class="string">"访问时间为："</span>+(System.currentTimeMillis()-startTime));</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"访问接口成功"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那如果有几百个接口的话，每一个接口都需要统计对应的访问时间的话，那就要写几百遍，这很不符合我们的常理，所以有没有一种办法是可以不修改对应的接口方法，并且只需要写一遍就能够应用到所有的接口上面或者指定的接口上面。</p><p>我们第一时间就可以想到AOP技术，AOP是在Spring当中比较常见的技术， AOP就是在不修改原来的代码就可以对接口方法进行增强的作用，利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>根据上述，我们需要到AOP,第一个不能少的则是对应的依赖。</p><h2 id="引入对应依赖"><a href="#引入对应依赖" class="headerlink" title="引入对应依赖"></a>引入对应依赖</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--aspectj--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-aop&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;2.7.4&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h2><p>统计接口的耗时和访问次数也不需要每一个接口都使用，比如说一些不经常访问的接口就没有统计他的访问次数，所以我们可以自定义一个注解，只要对应的接口方法上应用了这个注解，Spring会进行扫描，并执行对应的统计耗时操作即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.Documented;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 统计 方法/接口耗时 注解</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> devcheng</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Target</span>(ElementType.METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> CostTime &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义AOP切面"><a href="#定义AOP切面" class="headerlink" title="定义AOP切面"></a>定义AOP切面</h2><p>如果接口方法上应用了自定义的注解，那么就会被Spring扫描到，这里我用的是 @Pointcut 和 @Around 配合使用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 统计 方法/接口耗时 注解</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> devcheng</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CostTimeAspect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut</span>(value = <span class="string">"@annotation(net.devcheng.www.data.annotation.CostTime)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">costTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around</span>(<span class="string">"costTime()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">costTimeAround</span><span class="params">(ProceedingJoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">        Object obj = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">long</span> beginTime = System.currentTimeMillis();</span><br><span class="line">            obj = joinPoint.proceed();</span><br><span class="line">            <span class="comment">//获取方法名称</span></span><br><span class="line">            String method = joinPoint.getSignature().getName();</span><br><span class="line">            <span class="comment">//获取类名称</span></span><br><span class="line">            String className=joinPoint.getSignature().getDeclaringTypeName();</span><br><span class="line">            <span class="comment">//计算耗时</span></span><br><span class="line">            <span class="keyword">long</span> cost = System.currentTimeMillis() - beginTime;</span><br><span class="line">            log.error(<span class="string">"类:[&#123;&#125;]，方法:[&#123;&#125;] 接口耗时:[&#123;&#125;]"</span>, className,method, cost + <span class="string">"毫秒"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">            throwable.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="用在统计接口上"><a href="#用在统计接口上" class="headerlink" title="用在统计接口上"></a>用在统计接口上</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/V4/getSignsPredictDetail"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@CostTime</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getSignsPredictDetail</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(name)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"[]"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cityBrain4Service.getSignsPredictDetailByName(name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="用在统计定时任务上"><a href="#用在统计定时任务上" class="headerlink" title="用在统计定时任务上"></a>用在统计定时任务上</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Scheduled</span>(cron = <span class="string">"55 */5 * * * ?"</span>)</span><br><span class="line"><span class="meta">@CostTime</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">scenesSignTask</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 业务逻辑</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="运行输出"><a href="#运行输出" class="headerlink" title="运行输出"></a>运行输出</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2022-11-18 10:31:51.523 [http-nio-8886-exec-8] ERROR net.devcheng.www.data.config.CostTimeAspect Line:32  - 类:[net.devcheng.www.data.controller.SpecialInterfaceController]，方法:[getWeather] 接口耗时:[0毫秒]</span><br><span class="line">2022-11-18 10:31:52.122 [http-nio-8886-exec-9] ERROR net.devcheng.www.data.config.CostTimeAspect Line:32  - 类:[net.devcheng.www.data.controller.SpecialInterfaceController]，方法:[getWeather] 接口耗时:[1毫秒]</span><br><span class="line">2022-11-18 10:31:55.073 [http-nio-8886-exec-15] ERROR net.devcheng.www.data.config.CostTimeAspect Line:32  - 类:[net.devcheng.www.data.controller.CityBrain4Controller]，方法:[getScrollingMessages] 接口耗时:[2毫秒]</span><br><span class="line">2022-11-18 10:31:55.076 [http-nio-8886-exec-3] ERROR net.devcheng.www.data.config.CostTimeAspect Line:32  - 类:[net.devcheng.www.data.controller.SpecialInterfaceController]，方法:[getWeather] 接口耗时:[1毫秒]</span><br></pre></td></tr></table></figure><hr><p>The end</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;接口请求时间的快慢就代表着获取到对应的数据的快慢，也代表着用户请求页面数据的快慢，常常可以借助接口请求快慢进行相应的优化！&lt;
      
    
    </summary>
    
      <category term="blogshare" scheme="http://www.devcheng.net/categories/blogshare/"/>
    
    
      <category term="SpringBoot" scheme="http://www.devcheng.net/tags/SpringBoot/"/>
    
      <category term="接口耗时统计" scheme="http://www.devcheng.net/tags/%E6%8E%A5%E5%8F%A3%E8%80%97%E6%97%B6%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>努力做一个“不要脸”的人</title>
    <link href="http://www.devcheng.net/post/633a5847.html"/>
    <id>http://www.devcheng.net/post/633a5847.html</id>
    <published>2022-09-04T07:16:49.000Z</published>
    <updated>2022-09-04T07:29:05.526Z</updated>
    
    <content type="html"><![CDATA[<p>“你的脸还在脸上，有的人脸能放在兜里，有的人脸能撂在地下。”</p><p>这是我给一个小兄弟的建议：出来混，别太把脸当回事。当你放下面子去搞钱的时候，说明你成熟了；当你用钱挣回面子的时候，说明你成长了。</p><h2 id="“不要脸”是一种境界"><a href="#“不要脸”是一种境界" class="headerlink" title="“不要脸”是一种境界"></a>“不要脸”是一种境界</h2><p>人生的三种境界：第一，太要脸；第二，脸皮厚；第三，不要脸。</p><p>本文聊的不要脸，并非不知羞耻，指的是放下你的面子。面子是不能当饭吃的，这个世界上最不值钱的，就是所谓的面子。</p><p>比尔盖茨在一次大学毕业典礼上，讲过这样一句话：“这个世界不会在乎你的自尊，你必须先有所成就，然后再去强调自己的感受。”</p><p>乔布斯生前也说过一句很著名的话：“我特别喜欢和聪明人在一起工作，因为最大的好处是不用考虑他们的尊严。”</p><p>面子是无能者维护自己的盾牌。</p><p>你见没见过有的人明明知道自己错了，为了面子他就是死活不承认。</p><p>聪明人更关注自己的成长，他会保持开放的心态，而不是捍卫自己的面子，不是过度的自我防卫，想方设法证明“我没错”。</p><p>做到“不要脸”其实不容易，你必须内心极其强大。内心的强大来自于什么？是你的实力。只有没本事的人才会处处在乎面子，只有弱者才在乎面子，强者都活成了里子。</p><h2 id="面对批评的正确姿势"><a href="#面对批评的正确姿势" class="headerlink" title="面对批评的正确姿势"></a>面对批评的正确姿势</h2><p>闻过则喜，永远感谢愿意花时间在你身上的人。</p><p>有的人被批评了，像刺猬似的缩成一团竖起硬刺，“这不是我的错”；有的人被批评了，像鸵鸟一样把头钻进沙堆，“这和我没关系”；有的人被批评了，像寒风中哆哆嗦嗦的鹌鹑，“我也好可怜啊”；还有的人使出金蝉脱壳大法，“谁谁谁犯的错比我还大”，或是指东打西来找补，“我还干了很多好事呢”……</p><p>一味在意对方的态度，在乎自己的感受，就容易忘了事情的根本：别人为什么批评你？</p><p>一个比你更强的人批评你，你要明白一点：牛人没时间攻击你，也没时间浪费在一个他认为没有价值的人身上。牛人之所以批评你，是认为你还有潜力，他在帮助你成长。</p><p>面对批评，输球不要输姿势，你的心态应该是：把“为什么受伤的总是我”，变成“我能从这件事上学到什么”。</p><p>如果你觉得批评是一种刁难，一开始就输了；如果你觉得批评是一种雕刻，迟早都会赢的。</p><p>哪怕别人批评时严厉了点，甚至苛刻了些，你要做的不是愤怒、不是羞愧、不是执念于“我的面子啪叽掉地下了”的狭隘。错了咱就认，认了咱就改，改了就不再犯。</p><p>别人批评你不是坏事。就像情侣吵架，有的吵就挺好，说明还期望对方会改变，因为在意所以争吵，如果有一天不吵了，就是要分手了。褒贬是买主，喝彩是闲人。如果有一天老板都懒得批评你了，说明他已经放弃了。</p><h2 id="丑闻是成功者的奖励"><a href="#丑闻是成功者的奖励" class="headerlink" title="丑闻是成功者的奖励"></a>丑闻是成功者的奖励</h2><p>难听的大实话：真比你强很多的人，根本没空搭理你。</p><p>一位创业的朋友有点小郁闷，他的同行四处造谣他和公司的女性高管有事。</p><p>我和他说你应该高兴，这说明你在圈子里已经有一号了，这是一种变相的认可。你的面子不是撂地下了，是被竞争对手供起来了。如果你公司干得稀碎，同行都不带正眼瞧你的。</p><p>当一个人有了丑闻，他一定达到了相当的高度。</p><p>人们不会去毒舌一个毫无建树的人。一旦你有所成就，你的竞争对手就会乐于制造你的丑闻，而吃瓜群众也乐于把你的丑闻当做谈资，尤其是男女关系这种下三滥的东西。</p><p>没必要把别人的造谣中伤当回事，你对待丑闻的态度，决定了你职业发展的高度。</p><p>以前我写一本书，发现盗版，我会郁闷；现在我写一本书，发现盗版，我很开心。因为，这也算是一种变相的认可，多少书首印都卖不掉，盗版的人都不稀罕去盗版。</p><p>雷霆雨露，蜚短流长，俱是天恩。</p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>如果你想干成点什么事，给你三条建议：第一，坚持；第二，不要脸；第三，坚持不要脸！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;“你的脸还在脸上，有的人脸能放在兜里，有的人脸能撂在地下。”&lt;/p&gt;
&lt;p&gt;这是我给一个小兄弟的建议：出来混，别太把脸当回事。当你放下面子去搞钱的时候，说明你成熟了；当你用钱挣回面子的时候，说明你成长了。&lt;/p&gt;
&lt;h2 id=&quot;“不要脸”是一种境界&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="codelife" scheme="http://www.devcheng.net/categories/codelife/"/>
    
    
      <category term="职场" scheme="http://www.devcheng.net/tags/%E8%81%8C%E5%9C%BA/"/>
    
      <category term="程序人生" scheme="http://www.devcheng.net/tags/%E7%A8%8B%E5%BA%8F%E4%BA%BA%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>基于SpringBoot开发的家庭财务管理系统</title>
    <link href="http://www.devcheng.net/post/fb09f6bd.html"/>
    <id>http://www.devcheng.net/post/fb09f6bd.html</id>
    <published>2022-07-08T07:12:55.000Z</published>
    <updated>2023-05-20T11:51:43.398Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h2><p>本项目是基于Spring Boot 2.x 开发的，家庭财务管理系统分三种角色，分别是：系统管理员，家主，用户。本项目可以当作毕业设计也有对应的毕业论文可参考<strong>(毕业论文不是免费的)</strong>，期末课程作业等，也可以当作学习、进阶Spring Boot 的资料。</p><h2 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a><strong>功能描述</strong></h2><p>本项目通过不同的角色登录显示不同角色对应的菜单，不用角色之间查看到对应的功能菜单数据。其中系统管理员拥有系统所有菜单和功能，其次是家主，家主下拥有的是用户。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a><strong>主要功能</strong></h2><ul><li>收支管理（支出详情，收入详情）</li><li>理财管理（活期资产，理财详情，负债详情，理财产品）</li><li>财务统计（统计报表）</li><li>系统管理（用户管理，角色管理）</li><li>我的主页</li><li>安全退出</li><li>修改密码</li></ul><h2 id="开发环境（运行环境）"><a href="#开发环境（运行环境）" class="headerlink" title="开发环境（运行环境）"></a><strong>开发环境（运行环境）</strong></h2><ul><li>系统环境：Windows 11</li><li>开发工具：IntelliJ IDEA 2020.3</li><li>Java版本：JDK 1.8</li><li>Mysql版本：5.7</li><li>Maven版本：3.6.3</li></ul><h2 id="项目技术栈"><a href="#项目技术栈" class="headerlink" title="项目技术栈"></a><strong>项目技术栈</strong></h2><ul><li>Spring Boot 2.1.X.RELEASE</li><li>Spring Boot JPA</li><li>Maven 3.X</li><li>Mysql</li><li>thymeleaf</li><li>layui</li><li>Jquery</li><li>…</li></ul><h2 id="登录地址"><a href="#登录地址" class="headerlink" title="登录地址"></a><strong>登录地址</strong></h2><p>访问路径：<a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a></p><p>管理员账号/密码： admin / admin</p><p>家主账号/密码：house1 / 123456</p><p>用户账号/密码：yangtwo / 123456</p><h2 id="项目演示视频"><a href="#项目演示视频" class="headerlink" title="项目演示视频"></a><strong>项目演示视频</strong></h2><p>视频链接：</p><p>链接: <a href="https://pan.baidu.com/s/1ttuRq_9vkfjq320MarTFIA?pwd=fptq" target="_blank" rel="noopener">https://pan.baidu.com/s/1ttuRq_9vkfjq320MarTFIA?pwd=fptq</a></p><p>提取码: fptq</p><h2 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a><strong>项目截图</strong></h2><p><img src="/images/847c9e0de7f946628c0966831500d8ba.png" alt="“伊成博客”"></p><p><img src="/images/b50b753aaed748ebaae5596290ebdd36.png" alt="“伊成博客”"></p><p><img src="/images/b18206992bb448c099ee608fcd60c523.png" alt="“伊成博客”"></p><p><img src="/images/a602946b21d642c5a94c3c32bf7de941.png" alt="“伊成博客”"></p><p><img src="/images/293b76a7a9e6476f8f7f5a39a5bfdd65.png" alt="“伊成博客”"></p><h2 id="联系我们"><a href="#联系我们" class="headerlink" title="联系我们"></a><strong>联系我们</strong></h2><p>如有需要源码可以通过QQ 搜索：792435323联系我！<br>请备注：源码</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><strong>注意事项</strong></h2><p>获取代码之后，使用IDEA导入本项目前，请确保你本地环境是已经含有代码所需要运行环境的条件了。</p><p>接着找到对应的sql文件，将其导入到你本地的数据库即可。</p><p>最后修改项目中配置文件中的数据库对应的信息，确认修改完毕，找到对应的FfmsApplication直接运行吧！</p><h2 id="其它说明"><a href="#其它说明" class="headerlink" title="其它说明"></a><strong>其它说明</strong></h2><p>白嫖怪（伸手党）请绕道！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;本项目是基于Spring Boot 2.x 开发的，家庭财务管理系统分三种角色，分别是：系统管理员，家主，
      
    
    </summary>
    
      <category term="codeshare" scheme="http://www.devcheng.net/categories/codeshare/"/>
    
    
      <category term="SpringBoot" scheme="http://www.devcheng.net/tags/SpringBoot/"/>
    
      <category term="家庭财务管理系统" scheme="http://www.devcheng.net/tags/%E5%AE%B6%E5%BA%AD%E8%B4%A2%E5%8A%A1%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>解决github无法访问的方法之修改hosts文件</title>
    <link href="http://www.devcheng.net/post/768a5c50.html"/>
    <id>http://www.devcheng.net/post/768a5c50.html</id>
    <published>2022-06-17T03:23:41.000Z</published>
    <updated>2022-11-30T06:02:27.508Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>github有的朋友访问不了，今天就介绍一种解决方法。</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>根据修改hosts文件，配置github 对应ip从而达到可以访问github的目的，所以前提条件需要可以修改hosts文件。</p><p>hosts文件路径： C:\Windows\System32\drivers\etc</p><p>假如你无法修改对应的这个hosts文件，请移步百度一波先解决这个问题。</p><p>1.输入网站 <a href="https://www.ipaddress.com/" target="_blank" rel="noopener">https://www.ipaddress.com/</a> </p><p>2.按照下列清单在以上网站输入对于网址，得到的对应IP写入hosts文件即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">github.global.ssl.fastly.net</span><br><span class="line">github.com</span><br><span class="line">assets-cdn.github.com</span><br><span class="line">documentcloud.github.com</span><br><span class="line">gist.github.com</span><br><span class="line">help.github.com</span><br><span class="line">nodeload.github.com</span><br><span class="line">raw.github.com</span><br><span class="line">status.github.com</span><br><span class="line">training.github.com</span><br><span class="line">www.github.com</span><br><span class="line">avatars0.githubusercontent.com</span><br><span class="line">avatars1.githubusercontent.com</span><br><span class="line">codeload.github.com</span><br></pre></td></tr></table></figure></p><p>如果你嫌麻烦你可以直接复制下面的内容到你的hosts文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">146.75.77.194 github.global.ssl.fastly.net</span><br><span class="line">140.82.113.4 github.com</span><br><span class="line">185.199.109.153 assets-cdn.github.com</span><br><span class="line">185.199.109.153 documentcloud.github.com</span><br><span class="line">140.82.114.3 gist.github.com</span><br><span class="line">140.82.112.17 help.github.com</span><br><span class="line">140.82.112.10 nodeload.github.com</span><br><span class="line">185.199.108.133 raw.github.com</span><br><span class="line">140.82.114.18 status.github.com</span><br><span class="line">185.199.108.153 training.github.com</span><br><span class="line">140.82.113.4 www.github.com</span><br><span class="line">185.199.108.133 avatars0.githubusercontent.com</span><br><span class="line">185.199.109.133 avatars1.githubusercontent.com</span><br><span class="line">140.82.114.9 codeload.github.com</span><br></pre></td></tr></table></figure><p>如果发现哪一天，这个不可用了，可以留言评论告知我！</p><hr><p><strong>更新补充</strong></p><p>有朋友反应这么改没啥用，正好最近朋友推荐了一个新的利器！</p><p>这玩意叫 fastgithub , 有需要的自行下载即可！</p><p>链接: <a href="https://pan.baidu.com/s/1Jtl292N8XuLq_A3yCQM1TA?pwd=8ttt" target="_blank" rel="noopener">https://pan.baidu.com/s/1Jtl292N8XuLq_A3yCQM1TA?pwd=8ttt</a> 提取码: 8ttt </p><hr><p>The end.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;github有的朋友访问不了，今天就介绍一种解决方法。&lt;/p&gt;
&lt;h1 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; 
      
    
    </summary>
    
      <category term="blogshare" scheme="http://www.devcheng.net/categories/blogshare/"/>
    
    
      <category term="github无法访问" scheme="http://www.devcheng.net/tags/github%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE/"/>
    
  </entry>
  
  <entry>
    <title>如何将 swagger接口导出成PDF、markdown</title>
    <link href="http://www.devcheng.net/post/76a1c264.html"/>
    <id>http://www.devcheng.net/post/76a1c264.html</id>
    <published>2022-06-15T05:05:15.000Z</published>
    <updated>2022-06-15T05:26:05.256Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>swagger提供了UI页面，假如需要给合作伙伴对应的开发者，一般都需要提供一份接口PDF文件或是对应的markdown文件，这个时候就需要将对应swagger接口进行导出操作了。</p><h1 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h1><h2 id="第一步：准备swagger-json文件"><a href="#第一步：准备swagger-json文件" class="headerlink" title="第一步：准备swagger json文件"></a>第一步：准备swagger json文件</h2><p>1.打开 swagger ui 的页面</p><p>2.点击 swagger json 的链接，具体如下图：<br><img src="/images/微信截图_20220614123402_001.png" alt="“伊成博客”"></p><p>tips：如果你没有看到这个链接，使用F12打开开发者工具重新刷新后，复制 api-docs 的响应内容。</p><p>一定要保存成 json 文件。</p><h2 id="第二步：-把swagger-json文件导入-docway"><a href="#第二步：-把swagger-json文件导入-docway" class="headerlink" title="第二步： 把swagger json文件导入 docway"></a>第二步： 把swagger json文件导入 docway</h2><p>1.登录 <a href="http://docway.net" target="_blank" rel="noopener">http://docway.net</a> （如果第一次使用，需要注册）</p><p>2.在控制台中，新增项目，选择 导入<br><img src="/images/微信截图_20220614123402_002.png" alt="“伊成博客”"></p><p>3.选择 swagger 导入，并根据自己的 swagger json 选择是“上传文件方式”还是“粘贴json方式”<br><img src="/images/微信截图_20220614123402_003.png" alt="“伊成博客”"></p><p>4.导入成功后，就可以看到对应的信息了<br><img src="/images/微信截图_20220614123402_004.png" alt="“伊成博客”"></p><h2 id="第三步：导出PDF或markdown"><a href="#第三步：导出PDF或markdown" class="headerlink" title="第三步：导出PDF或markdown"></a>第三步：导出PDF或markdown</h2><p>1.在项目的“更多设置”中，找到“项目导出”功能。可以选择 PDF或Markdown 导出即可<br><img src="/images/微信截图_20220614123402_005.png" alt="“伊成博客”"></p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>总体来说docway导出的PDF接口文件还是不错的，如果选择 PDF(浏览器版)对应的接口文件则是带有颜色的。如果选择的是 仅仅 PDF生成的接口文件页脚是带有docway的网站链接的。</p><p>docway除了 PDF、markdown 导出， 还支持接口设计、接口分享、接口mock、接口历史记录、接口版本管理、团队管理等功能。</p><hr><p>The end.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;swagger提供了UI页面，假如需要给合作伙伴对应的开发者，一般都需要提供一份接口PDF文件或是对应的markdown文件
      
    
    </summary>
    
      <category term="blogshare" scheme="http://www.devcheng.net/categories/blogshare/"/>
    
    
      <category term="swagger2" scheme="http://www.devcheng.net/tags/swagger2/"/>
    
      <category term="导出PDF" scheme="http://www.devcheng.net/tags/%E5%AF%BC%E5%87%BAPDF/"/>
    
  </entry>
  
</feed>
